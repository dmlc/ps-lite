// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ps/internal/meta_message.proto

#ifndef PROTOBUF_ps_2finternal_2fmeta_5fmessage_2eproto__INCLUDED
#define PROTOBUF_ps_2finternal_2fmeta_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ps/internal/node.pb.h"
// @@protoc_insertion_point(includes)

namespace ps {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ps_2finternal_2fmeta_5fmessage_2eproto();
void protobuf_AssignDesc_ps_2finternal_2fmeta_5fmessage_2eproto();
void protobuf_ShutdownFile_ps_2finternal_2fmeta_5fmessage_2eproto();

class MetaMessage;
class Control;

enum Control_Command {
  Control_Command_TERMINATE = 1,
  Control_Command_ADD_NODE = 2,
  Control_Command_BARRIER = 3
};
bool Control_Command_IsValid(int value);
const Control_Command Control_Command_Command_MIN = Control_Command_TERMINATE;
const Control_Command Control_Command_Command_MAX = Control_Command_BARRIER;
const int Control_Command_Command_ARRAYSIZE = Control_Command_Command_MAX + 1;

const ::google::protobuf::EnumDescriptor* Control_Command_descriptor();
inline const ::std::string& Control_Command_Name(Control_Command value) {
  return ::google::protobuf::internal::NameOfEnum(
    Control_Command_descriptor(), value);
}
inline bool Control_Command_Parse(
    const ::std::string& name, Control_Command* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Control_Command>(
    Control_Command_descriptor(), name, value);
}
// ===================================================================

class MetaMessage : public ::google::protobuf::Message {
 public:
  MetaMessage();
  virtual ~MetaMessage();

  MetaMessage(const MetaMessage& from);

  inline MetaMessage& operator=(const MetaMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetaMessage& default_instance();

  void Swap(MetaMessage* other);

  // implements Message ----------------------------------------------

  MetaMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetaMessage& from);
  void MergeFrom(const MetaMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline ::google::protobuf::int32 head() const;
  inline void set_head(::google::protobuf::int32 value);

  // optional bytes body = 2;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 2;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const void* value, size_t size);
  inline ::std::string* mutable_body();
  inline ::std::string* release_body();
  inline void set_allocated_body(::std::string* body);

  // optional .ps.Control control = 3;
  inline bool has_control() const;
  inline void clear_control();
  static const int kControlFieldNumber = 3;
  inline const ::ps::Control& control() const;
  inline ::ps::Control* mutable_control();
  inline ::ps::Control* release_control();
  inline void set_allocated_control(::ps::Control* control);

  // optional bool request = 4 [default = false];
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 4;
  inline bool request() const;
  inline void set_request(bool value);

  // optional int32 customer_id = 5;
  inline bool has_customer_id() const;
  inline void clear_customer_id();
  static const int kCustomerIdFieldNumber = 5;
  inline ::google::protobuf::int32 customer_id() const;
  inline void set_customer_id(::google::protobuf::int32 value);

  // optional int32 timestamp = 6;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // repeated int32 data_type = 8 [packed = true];
  inline int data_type_size() const;
  inline void clear_data_type();
  static const int kDataTypeFieldNumber = 8;
  inline ::google::protobuf::int32 data_type(int index) const;
  inline void set_data_type(int index, ::google::protobuf::int32 value);
  inline void add_data_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data_type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data_type();

  // optional bool push = 9;
  inline bool has_push() const;
  inline void clear_push();
  static const int kPushFieldNumber = 9;
  inline bool push() const;
  inline void set_push(bool value);

  // optional bool simple_app = 10 [default = false];
  inline bool has_simple_app() const;
  inline void clear_simple_app();
  static const int kSimpleAppFieldNumber = 10;
  inline bool simple_app() const;
  inline void set_simple_app(bool value);

  // @@protoc_insertion_point(class_scope:ps.MetaMessage)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_control();
  inline void clear_has_control();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_customer_id();
  inline void clear_has_customer_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_push();
  inline void clear_has_push();
  inline void set_has_simple_app();
  inline void clear_has_simple_app();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* body_;
  ::ps::Control* control_;
  ::google::protobuf::int32 head_;
  ::google::protobuf::int32 customer_id_;
  ::google::protobuf::int32 timestamp_;
  bool request_;
  bool push_;
  bool simple_app_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_type_;
  mutable int _data_type_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_ps_2finternal_2fmeta_5fmessage_2eproto();
  friend void protobuf_AssignDesc_ps_2finternal_2fmeta_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_ps_2finternal_2fmeta_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static MetaMessage* default_instance_;
};
// -------------------------------------------------------------------

class Control : public ::google::protobuf::Message {
 public:
  Control();
  virtual ~Control();

  Control(const Control& from);

  inline Control& operator=(const Control& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Control& default_instance();

  void Swap(Control* other);

  // implements Message ----------------------------------------------

  Control* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Control& from);
  void MergeFrom(const Control& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Control_Command Command;
  static const Command TERMINATE = Control_Command_TERMINATE;
  static const Command ADD_NODE = Control_Command_ADD_NODE;
  static const Command BARRIER = Control_Command_BARRIER;
  static inline bool Command_IsValid(int value) {
    return Control_Command_IsValid(value);
  }
  static const Command Command_MIN =
    Control_Command_Command_MIN;
  static const Command Command_MAX =
    Control_Command_Command_MAX;
  static const int Command_ARRAYSIZE =
    Control_Command_Command_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Command_descriptor() {
    return Control_Command_descriptor();
  }
  static inline const ::std::string& Command_Name(Command value) {
    return Control_Command_Name(value);
  }
  static inline bool Command_Parse(const ::std::string& name,
      Command* value) {
    return Control_Command_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .ps.Control.Command cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::ps::Control_Command cmd() const;
  inline void set_cmd(::ps::Control_Command value);

  // repeated .ps.Node node = 2;
  inline int node_size() const;
  inline void clear_node();
  static const int kNodeFieldNumber = 2;
  inline const ::ps::Node& node(int index) const;
  inline ::ps::Node* mutable_node(int index);
  inline ::ps::Node* add_node();
  inline const ::google::protobuf::RepeatedPtrField< ::ps::Node >&
      node() const;
  inline ::google::protobuf::RepeatedPtrField< ::ps::Node >*
      mutable_node();

  // optional int32 barrier_group = 3;
  inline bool has_barrier_group() const;
  inline void clear_barrier_group();
  static const int kBarrierGroupFieldNumber = 3;
  inline ::google::protobuf::int32 barrier_group() const;
  inline void set_barrier_group(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ps.Control)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_barrier_group();
  inline void clear_has_barrier_group();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ps::Node > node_;
  int cmd_;
  ::google::protobuf::int32 barrier_group_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ps_2finternal_2fmeta_5fmessage_2eproto();
  friend void protobuf_AssignDesc_ps_2finternal_2fmeta_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_ps_2finternal_2fmeta_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static Control* default_instance_;
};
// ===================================================================


// ===================================================================

// MetaMessage

// optional int32 head = 1;
inline bool MetaMessage::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetaMessage::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetaMessage::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetaMessage::clear_head() {
  head_ = 0;
  clear_has_head();
}
inline ::google::protobuf::int32 MetaMessage::head() const {
  return head_;
}
inline void MetaMessage::set_head(::google::protobuf::int32 value) {
  set_has_head();
  head_ = value;
}

// optional bytes body = 2;
inline bool MetaMessage::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetaMessage::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetaMessage::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetaMessage::clear_body() {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    body_->clear();
  }
  clear_has_body();
}
inline const ::std::string& MetaMessage::body() const {
  return *body_;
}
inline void MetaMessage::set_body(const ::std::string& value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void MetaMessage::set_body(const char* value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void MetaMessage::set_body(const void* value, size_t size) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MetaMessage::mutable_body() {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  return body_;
}
inline ::std::string* MetaMessage::release_body() {
  clear_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = body_;
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MetaMessage::set_allocated_body(::std::string* body) {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    delete body_;
  }
  if (body) {
    set_has_body();
    body_ = body;
  } else {
    clear_has_body();
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .ps.Control control = 3;
inline bool MetaMessage::has_control() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetaMessage::set_has_control() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetaMessage::clear_has_control() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetaMessage::clear_control() {
  if (control_ != NULL) control_->::ps::Control::Clear();
  clear_has_control();
}
inline const ::ps::Control& MetaMessage::control() const {
  return control_ != NULL ? *control_ : *default_instance_->control_;
}
inline ::ps::Control* MetaMessage::mutable_control() {
  set_has_control();
  if (control_ == NULL) control_ = new ::ps::Control;
  return control_;
}
inline ::ps::Control* MetaMessage::release_control() {
  clear_has_control();
  ::ps::Control* temp = control_;
  control_ = NULL;
  return temp;
}
inline void MetaMessage::set_allocated_control(::ps::Control* control) {
  delete control_;
  control_ = control;
  if (control) {
    set_has_control();
  } else {
    clear_has_control();
  }
}

// optional bool request = 4 [default = false];
inline bool MetaMessage::has_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MetaMessage::set_has_request() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MetaMessage::clear_has_request() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MetaMessage::clear_request() {
  request_ = false;
  clear_has_request();
}
inline bool MetaMessage::request() const {
  return request_;
}
inline void MetaMessage::set_request(bool value) {
  set_has_request();
  request_ = value;
}

// optional int32 customer_id = 5;
inline bool MetaMessage::has_customer_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MetaMessage::set_has_customer_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MetaMessage::clear_has_customer_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MetaMessage::clear_customer_id() {
  customer_id_ = 0;
  clear_has_customer_id();
}
inline ::google::protobuf::int32 MetaMessage::customer_id() const {
  return customer_id_;
}
inline void MetaMessage::set_customer_id(::google::protobuf::int32 value) {
  set_has_customer_id();
  customer_id_ = value;
}

// optional int32 timestamp = 6;
inline bool MetaMessage::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MetaMessage::set_has_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MetaMessage::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MetaMessage::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 MetaMessage::timestamp() const {
  return timestamp_;
}
inline void MetaMessage::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// repeated int32 data_type = 8 [packed = true];
inline int MetaMessage::data_type_size() const {
  return data_type_.size();
}
inline void MetaMessage::clear_data_type() {
  data_type_.Clear();
}
inline ::google::protobuf::int32 MetaMessage::data_type(int index) const {
  return data_type_.Get(index);
}
inline void MetaMessage::set_data_type(int index, ::google::protobuf::int32 value) {
  data_type_.Set(index, value);
}
inline void MetaMessage::add_data_type(::google::protobuf::int32 value) {
  data_type_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MetaMessage::data_type() const {
  return data_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MetaMessage::mutable_data_type() {
  return &data_type_;
}

// optional bool push = 9;
inline bool MetaMessage::has_push() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MetaMessage::set_has_push() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MetaMessage::clear_has_push() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MetaMessage::clear_push() {
  push_ = false;
  clear_has_push();
}
inline bool MetaMessage::push() const {
  return push_;
}
inline void MetaMessage::set_push(bool value) {
  set_has_push();
  push_ = value;
}

// optional bool simple_app = 10 [default = false];
inline bool MetaMessage::has_simple_app() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MetaMessage::set_has_simple_app() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MetaMessage::clear_has_simple_app() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MetaMessage::clear_simple_app() {
  simple_app_ = false;
  clear_has_simple_app();
}
inline bool MetaMessage::simple_app() const {
  return simple_app_;
}
inline void MetaMessage::set_simple_app(bool value) {
  set_has_simple_app();
  simple_app_ = value;
}

// -------------------------------------------------------------------

// Control

// required .ps.Control.Command cmd = 1;
inline bool Control::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Control::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Control::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Control::clear_cmd() {
  cmd_ = 1;
  clear_has_cmd();
}
inline ::ps::Control_Command Control::cmd() const {
  return static_cast< ::ps::Control_Command >(cmd_);
}
inline void Control::set_cmd(::ps::Control_Command value) {
  assert(::ps::Control_Command_IsValid(value));
  set_has_cmd();
  cmd_ = value;
}

// repeated .ps.Node node = 2;
inline int Control::node_size() const {
  return node_.size();
}
inline void Control::clear_node() {
  node_.Clear();
}
inline const ::ps::Node& Control::node(int index) const {
  return node_.Get(index);
}
inline ::ps::Node* Control::mutable_node(int index) {
  return node_.Mutable(index);
}
inline ::ps::Node* Control::add_node() {
  return node_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ps::Node >&
Control::node() const {
  return node_;
}
inline ::google::protobuf::RepeatedPtrField< ::ps::Node >*
Control::mutable_node() {
  return &node_;
}

// optional int32 barrier_group = 3;
inline bool Control::has_barrier_group() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Control::set_has_barrier_group() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Control::clear_has_barrier_group() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Control::clear_barrier_group() {
  barrier_group_ = 0;
  clear_has_barrier_group();
}
inline ::google::protobuf::int32 Control::barrier_group() const {
  return barrier_group_;
}
inline void Control::set_barrier_group(::google::protobuf::int32 value) {
  set_has_barrier_group();
  barrier_group_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ps

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ps::Control_Command>() {
  return ::ps::Control_Command_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ps_2finternal_2fmeta_5fmessage_2eproto__INCLUDED
